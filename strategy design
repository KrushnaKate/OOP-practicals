// PaymentStrategy.java
public interface PaymentStrategy {
    void pay(double amount);
}

// CreditCardPayment.java
public class CreditCardPayment implements PaymentStrategy {
    private String cardNumber;
    private String name;
    private String expiryDate;
    private int cvv;

    public CreditCardPayment(String cardNumber, String name, String expiryDate, int cvv) {
        this.cardNumber = cardNumber;
        this.name = name;
        this.expiryDate = expiryDate;
        this.cvv = cvv;
    }

    @Override
    public void pay(double amount) {
        System.out.println("Paid $" + amount + " using Credit Card.");
        // Additional credit card payment logic can be added here
    }
}

// PayPalPayment.java
public class PayPalPayment implements PaymentStrategy {
    private String email;

    public PayPalPayment(String email) {
        this.email = email;
    }

    @Override
    public void pay(double amount) {
        System.out.println("Paid $" + amount + " using PayPal.");
        // Additional PayPal payment logic can be added here
    }
}

// BitCoinPayment.java
public class BitCoinPayment implements PaymentStrategy {
    private String bitcoinAddress;

    public BitCoinPayment(String bitcoinAddress) {
        this.bitcoinAddress = bitcoinAddress;
    }

    @Override
    public void pay(double amount) {
        System.out.println("Paid $" + amount + " using BitCoin.");
        // Additional BitCoin payment logic can be added here
    }
}

// ShoppingCart.java
public class ShoppingCart {
    private PaymentStrategy paymentStrategy;

    public void setPaymentStrategy(PaymentStrategy paymentStrategy) {
        this.paymentStrategy = paymentStrategy;
    }

    public void checkout(double amount) {
        if (paymentStrategy != null) {
            paymentStrategy.pay(amount);
        } else {
            System.out.println("Please set a payment strategy before checking out.");
        }
    }
}

// Main.java
public class Main {
    public static void main(String[] args) {
        // Create a shopping cart
        ShoppingCart cart = new ShoppingCart();

        // Set the payment strategy to Credit Card
        PaymentStrategy creditCardPayment = new CreditCardPayment("1234-5678-9101-1121", "John Doe", "12/23", 123);
        cart.setPaymentStrategy(creditCardPayment);
        cart.checkout(100.0);

        // Set the payment strategy to PayPal
        PaymentStrategy payPalPayment = new PayPalPayment("john.doe@example.com");
        cart.setPaymentStrategy(payPalPayment);
        cart.checkout(50.0);

        // Set the payment strategy to BitCoin
        PaymentStrategy bitCoinPayment = new BitCoinPayment("1A2b3C4d5E6f");
        cart.setPaymentStrategy(bitCoinPayment);
        cart.checkout(75.0);
    }
}
